name: Deploy (Strategy)

on:
  workflow_dispatch:
    inputs:
      service:
        description: "Servicio"
        required: true
        type: string
        default: "gateway"
      version:
        description: "Imagen tag/digest"
        required: true
        type: string
      strategy:
        description: "canary|bluegreen|direct"
        required: true
        type: choice
        options: ["canary", "bluegreen", "direct"]
      env:
        description: "staging|prod"
        required: true
        type: choice
        options: ["staging", "prod"]

env:
  IMAGE_PREFIX: ghcr.io/${{ github.repository_owner }}/gnew

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Select strategy
        id: sel
        run: echo "strategy=${{ inputs.strategy }}" >> $GITHUB_OUTPUT

      - name: Canary deploy
        if: steps.sel.outputs.strategy == 'canary'
        run: |
          kubectl apply -f apps/${{ inputs.service }}/canary/${{ inputs.service }}-canary.yaml

      - name: Blue/Green update image and switch
        if: steps.sel.outputs.strategy == 'bluegreen'
        run: |
          FILE=apps/${{ inputs.service }}/kustomize/base/deployment-green.yaml
          sed -i "s#image: .*#image: ${IMAGE_PREFIX}-${{ inputs.service }}:${{ inputs.version }}#" "$FILE"
          git config user.name "ci"
          git config user.email "ci@users.noreply.github.com"
          git commit -am "deploy(${ { inputs.service } }): green ${{ inputs.version }}" || true
          git push || true
          echo "ArgoCD sync step intentionally omitted; wire up if needed."

      - name: Direct (GitOps bump)
        if: steps.sel.outputs.strategy == 'direct'
        run: |
          yq -i '.values.services.${{ inputs.service }}.image = "'"${IMAGE_PREFIX}-${{ inputs.service }}:${{ inputs.version }}"'"' infra/helm/gnew-platform/values.${{ inputs.env }}.yaml
          git config user.name "ci"
          git config user.email "ci@users.noreply.github.com"
          git commit -am "deploy(${ { inputs.service } }): direct ${{ inputs.version }}" || true
          git push || true

