  };
  await pool.query(
    `INSERT INTO dpia (id, feature, owner, risks, created_at, approved) VALUES ($1,$2,$3,$4,$5,$6)`,
    [rec.id, rec.feature, rec.owner, JSON.stringify(rec.risks), rec.createdAt, rec.approved]
  );
  return rec;
}

export async function approveDPIA(id: string, approver: string): Promise<void> {
  await pool.query(
    `UPDATE dpia SET approved=true, approver=$2, approved_at=now() WHERE id=$1`,
    [id, approver]
  );
}

export async function listDPIA(): Promise<DPIARecord[]> {
  const res = await pool.query("SELECT * FROM dpia ORDER BY created_at DESC");
  return res.rows.map((r) => ({
    id: r.id,
    feature: r.feature,
    owner: r.owner,
    risks: r.risks,
    createdAt: r.created_at,
    approved: r.approved
  }));
}


