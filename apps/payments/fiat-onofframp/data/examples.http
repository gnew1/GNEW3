
### Quotes (buy 150 EUR → USDC)
GET http://localhost:8081/quotes?side=buy&fiat=EUR&crypto=USDC&amount=150

### Crear orden (idempotent)
POST http://localhost:8081/orders
Content-Type: application/json

{
  "side": "buy",
  "fiat": "EUR",
  "crypto": "USDC",
  "amount": 150,
  "walletAddress": "0xYourWalletAddressHere",
  "provider": "mock",
  "idempotencyKey": "idem-abc-123",
  "kycEvidence": { "docType": "id-card", "country": "PT" }
}

### Consultar orden
GET http://localhost:8081/orders/{{orderId}}

### Webhook (simulado)
POST http://localhost:8081/webhooks/mock
x-mock-timestamp: {{ts}}
x-mock-signature: v1={{hmac}}
Content-Type: application/json

{
  "ref": "mock_123",
  "status": "completed"
}

### Auditoría
GET http://localhost:8081/audit/{{orderId}}


Notas de implementación

El proveedor mock sirve como plantilla para integrar rampas reales (p. ej., MoonPay, Transak, Coinbase Pay). Añade un adaptador nuevo en src/providers/*, regístralo en registry.ts y usa su esquema de firma en verifyWebhook.

Mantén no‑custodia: el servicio nunca guarda llaves ni wallets más allá de direcciones destino y metadatos de órdenes.

Cumplimiento: amplía kyc.ts con verificaciones automáticas (listas de sanciones, límites por país) si tu prompt de negocio lo requiere.

Seguridad: asegúrate de rotar webhookSecrets y aceptar varias versiones de firma (prefijo v1= ya contemplado).

Siguiente ejecución entregará N154 (avanza +1 sobre lo ya entregado).

Tú dijiste:
Ejecuta y entrégame, como IA programadora, el siguiente prompt N de "N1 AL N420 PROMPTS DE PROGRAMACIÓN DE GNEW.txt", empezando en N151 y avanzando +1 en cada ejecución. No repitas prompts ya entregados. Devuelve código completo con rutas coherentes con el monorepo y alineado con el stack indicado en cada prompt.
ChatGPT Plus
Pensó durante 1m 10s

